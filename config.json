[
    {
        "author": "SIMULEITE",
        "title": "LeetCode100 错题本",
        "url": "http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/LeetCode100%20%E9%94%99%E9%A2%98%E6%9C%AC/",
        "summary": "Hash两数之和</h2",
        "published": "2024-09-30",
        "updated": "2024-10-12 14:29:15"
    },
    {
        "author": "SIMULEITE",
        "title": "mysql使用",
        "url": "http://simuleite.github.io/ComputerScience/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/mysql%E4%BD%BF%E7%94%A8/",
        "summary": "使用启动数据库# 需要管理员权限net start <mysql-service_name>登录数据库mysql -u <username> -p$ <password>导入数据库-- 设置中文字符集mysql>SETNAMES'utf8mb4';mysql>SETcharacter_set_server='utf8mb4';mysql>SOURCE/path/to/database.sql;数据库-- 创建数据库CREATEDATABASE yourDatabaseCHARACTERSETutf8mb4;-- 查看所有数据库showdatabases;-- 进入数据库use yourDatabase表-- 建表CREATETABLEyourTable (idINTAUTO_INCREMENTPRIMARYKEY,namevarchar(50)NOTNULLDEFAULT'worker',ageINT,addrvarchar(50));-- 删除表drop<table>;-- 查看表showtables;-- 修改表altertable<table>add<col>char(20)dropcolumn<col>;-- 删除整张表droptable<table>;",
        "published": "2024-07-26",
        "updated": "2024-10-10 11:55:08"
    },
    {
        "author": "NgaiYeanCoi",
        "title": "白云学院-关于如何申请学校edu邮箱",
        "url": "https://blog.nyc1.xyz/2024/10/07/%E7%99%BD%E4%BA%91%E5%AD%A6%E9%99%A2-%E5%85%B3%E4%BA%8E%E5%A6%82%E4%BD%95%E7%94%B3%E8%AF%B7%E5%AD%A6%E6%A0%A1edu%E9%82%AE%E7%AE%B1/",
        "summary": "前言很多同学都不知道教育邮箱、学信网认证有很多隐藏的福利可以省下很多钱，并且许多企业都有推行高校学生权益，你不单止可以免费使用正版软件，还可以以最优惠的价格购买他们的产品。就来让我打破你们的信息差吧！",
        "published": "2024-10-06",
        "updated": "2024-10-10 06:20:27"
    },
    {
        "author": "SIMULEITE",
        "title": "AI爱外卖",
        "url": "http://simuleite.github.io/ComputerScience/%E9%A1%B9%E7%9B%AE/AI%E7%88%B1%E5%A4%96%E5%8D%96/",
        "summary": "项目心得24.10.",
        "published": "2024-09-20",
        "updated": "2024-10-09 12:03:43"
    },
    {
        "author": "NgaiYeanCoi",
        "title": "白云学院维修部指南-第一章硬件性能的认识",
        "url": "https://blog.nyc1.xyz/2024/10/02/%E7%BB%B4%E4%BF%AE%E9%83%A8%E6%8C%87%E5%8D%97-%E7%AC%AC%E4%B8%80%E7%AB%A0/",
        "summary": "前言介于我在国庆回家的路上在想着怎么样才能让自己的社团成员学习到维修的一些知识呢，我想到了写一篇blog来教你们如何快速的入门。作为24届白云学院计协维修部的副部长，具备扎实的电脑维修知识和实践能力是作为维修部成员是必备的素质。我希望这一篇指南可以传承下去让白云学院每一届的维修部的同学都有所受益。本指南将从电脑的基础知识入手，详细介绍电脑各个部件的功能与作用，并通过实践拆装电脑、清灰等操作，让大家亲自动手，掌握实用的维修技巧，我们还将深入讲解BIOS的基本概念和常用设置，以及如何重装系统等高级操作。此篇适用于广东白云学院计算机协会维修部或者其他部门的每一个成员，以及为有兴趣的同学提供学习指南。",
        "published": "2024-10-01",
        "updated": "2024-10-06 13:54:20"
    },
    {
        "author": "SIMULEITE",
        "title": "OS 操作系统",
        "url": "http://simuleite.github.io/ComputerScience/%E8%AF%BE%E7%A8%8B/OS%20%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/",
        "summary": "Chapter3 操作系统结构复杂度管理方法 M.A.L.HModularity: 模块化，分而治之Abstraction: 抽象，接口与实现分离，遵循宽进严出原则。例如虚拟内存、文件系统对于大型系统，只有模块化和抽象，可能导致划分模块太多，交互关系复杂，因此还需要引入分层和层次结构控制复杂度。Layering: 分层，每个层级是一套完整机制。通常一个模块只能与本层和上下层交互，不能跨层。例如OSI、TCP/IPHierarchy: 层次结构，大的子系统由多个小的子系统组织成。即同级模块的分层宽进严出原则：容忍各种输入（包括恶意输入），严格控制模块的对外输出微内核宏内核架构：单点bug使整个系统崩溃。微内核：解耦单个功能/模块（如文件系统、设备驱动）作为独立服务隔离运行，使内核成为一个最小功能集。微内核架构服务隔离，单点出问题系统不会崩溃内核态部分，称为μkernel\\mu kernelμkernel微内核优势：弹性硬件拓展能力硬件异构实现功能安全信息安全时延确定现代操作系统特征：1）虚拟内存；2）用户态、内核态隔离。",
        "published": "2024-08-06",
        "updated": "2024-10-06 08:24:22"
    },
    {
        "author": "NgaiYeanCoi",
        "title": "MarkDown的使用教程",
        "url": "https://blog.nyc1.xyz/2023/11/04/MarkDown%E7%9A%84%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/",
        "summary": "学习Markdown by NgaiYeanCoi 2023.8.29更新此篇是由NgaiYeanCoi整理编写出的Markdown教程，如有错误的请指出。Stayrabbit & NgaiYeanCoi是同一人。全篇建议配合源代码一起阅读点我查看源码一、前言1.1 关于MarkdownMarkdown是一种轻量标记语言,它可以让人们更容易读懂纯文本的文档说明Markdown编写的文档可以导出为HTML、World、图像、PDF 等多种格式的文档Markdown文档的后缀.md.markdown1.2 Markdown的应用Markdown可以用来写笔记、电子书目前很多网站都广泛使用Markdown来撰写帮助文档或者是用于论坛，例如：GitHub、简书等1.3 Markdown的编辑器Markdown存在有多种多样的编辑器，并没有哪种编辑器更好的说法，只有适合自己的编辑器。常见的Markdown编辑器有Visual Studio Code、Typora、Obsidian等二、Markdown的语法Markdown 有着非常简洁的语法，不过由于它的自由性，Markdown 也产生了许多变体，如 GitHub Flavored Markdown (GFM) 和 Pandoc 。其他的暂且不讨论，先来看看Markdown 通用的基础语法。以下的语法基于VS Code与Markdown Preview Enhanced 插件",
        "published": "2023-11-04",
        "updated": "2024-10-06 06:51:26"
    },
    {
        "author": "NgaiYeanCoi",
        "title": "AI与区块链选修期中指南",
        "url": "https://blog.nyc1.xyz/2024/04/21/AI%E4%B8%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E6%9C%9F%E4%B8%AD%E6%8C%87%E5%8D%97/",
        "summary": "前言介于很多同学没接触过AIGC的工具不知道该怎么去完成该考试前期我试过国内的一些模型感觉都不如DALLE3好用，但使用这个服务对于通过考试来说很贵，这里将告诉你怎么样用最低的成本来通过考试这里将提供购买渠道以及应用平台以下将作为指南去帮助你通过期中考试如果你不想花钱就找免费的AIGC工具例如讯飞星火或者LiblibAI·哩布哩布AI以及智谱清言等等，都可以帮助你完成期中考试，工具不限。如果想省麻烦的可以用DALLE3。",
        "published": "2024-04-21",
        "updated": "2024-10-05 16:48:59"
    },
    {
        "author": "NgaiYeanCoi",
        "title": "AI与区块链选修第九章测验图解",
        "url": "https://blog.nyc1.xyz/2024/04/15/AI%E4%B8%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E9%80%89%E4%BF%AE%E7%AC%AC%E4%B9%9D%E7%AB%A0%E6%B5%8B%E9%AA%8C%E5%9B%BE%E8%A7%A3/",
        "summary": "前言在学习通上老师给的解析还不够详细仍然缺少了些细节这里将一步步拆解老师给的解析大家可以来使用我整理的数据集对于完成作业已经足够了步骤打开百度智能云网站点击【立即使用】在【在线使用】【图像:文心大模型】这一弹出【选择模型类型】，列选择【物体检测】",
        "published": "2024-04-15",
        "updated": "2024-10-05 16:48:58"
    },
    {
        "author": "NgaiYeanCoi",
        "title": "liunx安全管理",
        "url": "https://blog.nyc1.xyz/2024/04/20/liunx%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86/",
        "summary": "前言介于上次被一个陌生的德国ip入侵之后不得已重置整个系统，所有已经部署的业务都得重来。由此可见做好安全管理多么重要！以下一些常见的操作来增加系统安全防止被恶意入侵Linux安全管理之SSH安全备份记得备份好你的SSHD的配置文件以防万一1# cp /etc/ssh/sshd_config /etc/ssh/backup.sshd_configOpenSSH的路径OpenSSH 服务的配置文件路径为 /etc/ssh/sshd_config ，要配置它，必须得使用系统管理员（ root ）权限或使用 sudo 命令临时获得的管理员权限。配置信息大概长这样的链接这里默认你已经会用编辑工具没有的话请安装VIM1# apt-get install vim编辑配置文件准备好就直接编辑1# vim /etc/ssh/sshd_config",
        "published": "2024-04-20",
        "updated": "2024-10-05 16:42:53"
    },
    {
        "author": "NgaiYeanCoi",
        "title": "利用gost中转隧道中转加密",
        "url": "https://blog.nyc1.xyz/2024/03/27/%E5%88%A9%E7%94%A8gost%E4%B8%AD%E8%BD%AC%E9%9A%A7%E9%81%93%E4%B8%AD%E8%BD%AC%E5%8A%A0%E5%AF%86/",
        "summary": "原脚本功能实现了systemd及gost配置文件对gost进行管理在不借助其他工具(如screen)的情况下实现多条转发规则同时生效机器reboot后转发不失效支持传输类型：tcp+udp不加密转发relay+tls加密此脚本新增功能增加了传输类型选择功能新支持传输类型relay+wsrelay+wss落地机一键创建ss/socks5/http代理 (gost内置)支持多传输类型的多落地简单型均衡负载增加gost国内加速下载镜像（被恶意刷流量导致我损失，不再提供）简单创建或删除gost定时重启任务脚本自动检查更新转发CDN自选节点ip支持自定义tls证书，落地可一键申请证书，中转可开启证书校验开源来自KANIKIG/Multi-EasyGostgost的脚本的安装命令",
        "published": "2024-03-27",
        "updated": "2024-10-01 17:41:19"
    },
    {
        "author": "NgaiYeanCoi",
        "title": "UFW防火墙",
        "url": "https://blog.nyc1.xyz/2024/03/18/UFW%E9%98%B2%E7%81%AB%E5%A2%99/",
        "summary": "安装Ubuntu & Debian1# apt-get install ufw -yCentOSCentOS默认软件源不提供UFW，所以你需要安装EPEL软件源，运行以下命令：1# yum install epel-release -y安装完成后使用以下命令安装UFW：1# yum install --enablerepo=\"epel\" ufw -yUFW安装后，可以通过以下命令来启动UFW服务并使其在启动时启动（一般在完成默认配置后再重启）：1# ufw enable如果运行ufw命令时报Command Not Found错误，可以使用whereis ufw来确定ufw的位置，之后你也可以顺手设置一下alias。接下来，使用以下命令检查UFW的状态，可以看到以下输出：12# ufw statusStatus: active还可以通过运行以下命令来禁用UFW防火墙（后面可以通过enable命令随时启用服务）：1# ufw disable如果你决定要重新开始，则可以使用reset命令：1# ufw reset这将禁用UFW并删除之前定义的任何规则。",
        "published": "2024-03-18",
        "updated": "2024-10-01 17:41:10"
    },
    {
        "author": "NgaiYeanCoi",
        "title": "OpenSSH服务器ssh_config",
        "url": "https://blog.nyc1.xyz/2024/03/18/SSHD%E9%85%8D%E7%BD%AE%E7%9A%84%E8%A7%A3%E9%87%8A/",
        "summary": "SSHD配置文件默认路径1SSH的配置文件路径：/etc/ssh/sshd_config修改1vim /etc/ssh/sshd_config",
        "published": "2024-03-18",
        "updated": "2024-10-01 17:38:12"
    },
    {
        "author": "SIMULEITE",
        "title": "CS61B sp18",
        "url": "http://simuleite.github.io/ComputerScience/%E8%AF%BE%E7%A8%8B/CS61B%20sp18/",
        "summary": "Gradescope AutograderSpring 201844个Assn，偏向数据结构邀请码：MNXYKX学校：UC Berkeley直接输入，不要选择2U-UC Berkeley，否则将提示COURSE ENTRY CODE IS INVALIDSpring 202119个Assn，偏向软件工程邀请码：MB7ZPY文章收录The Law of the Broken Futon浮沙筑高台法则“Since I’m fine now, can’t I add that missing piece later, when it’s actually needed?” Sometimes, yes. But it’s much harder.Adding the missing piece later means waiting until the damage is already underway, and hellishly difficult to undo.A Response to “Why Most Unit Testing is Waste”(Unit Tests) They are based onprogrammers’ fantasies about how the function should work. But programmers break down requirements into smaller components all the time – this is how you program. Sometimes there are misunderstandings, but that is the exception, not the rule, in my opinion.2.1 Mystery of Java RestoreWhen instantiate an Object,obj = new Object(),objstores the addressof the Object, not the specific data struction.(That is why all type of variables create memory boxes of 64 bits. It is just the memory of the address.)Therefore, When we useobj2 = obj, Java simply copy the addr ofobjand assign it toobj2(They are pointing to the same Object), that is why when we changeobj2.weightit effectsobj.weighttoo.",
        "published": "2024-08-20",
        "updated": "2024-09-30 03:01:12"
    },
    {
        "author": "SIMULEITE",
        "title": "DNS Over Https",
        "url": "http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/DNS%20Over%20Https/",
        "summary": "Windows",
        "published": "2024-09-09",
        "updated": "2024-09-10 11:25:58"
    },
    {
        "author": "残页",
        "title": "Android 每月安全补丁分析索引",
        "url": "https://blog.canyie.top/2024/04/18/android-security-bulletin-index/",
        "summary": "之前一直在看的每月补丁分析的博客https://wrlus.com/看起来是不再更新了，想了想反正自己每个月也要去追着看，干脆写一下分析得了，方便自己后面找。本人很菜，分析的大部分都是 Java 层漏洞，大佬别骂我 QAQ最初发表在我的 telegram 频道。每月补丁都会在此文中更新。最后更新时间：2024/09/07 更新内容：更新 2024-09",
        "published": "2024-04-18",
        "updated": "2024-09-08 14:46:56"
    },
    {
        "author": "SIMULEITE",
        "title": "Spring Framework",
        "url": "http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/Spring%20Framework/",
        "summary": "Pom.xml 更换 Maven 源<?xml version=\"1.0\"encoding=\"UTF-8\"?><projectxmlns=\"http://maven.apache.org/POM/4.0.0\"xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"><modelVersion>4.0.0</modelVersion><groupId>org.springframework.quoters</groupId><artifactId>quoters-incorporated</artifactId><version>0.0.1-SNAPSHOT</version><packaging>jar</packaging><name>quoters-incorporated</name><description>REST service to support the guides</description><developers><developer><id>gturnquist</id><name>Greg Turnquist</name><email>gturnquist at vmware.com</email><organization>VMware, Inc.</organization><roles><role>Project Lead</role></roles></developer></developers><organization><name>VMware, Inc.</name><url>https://spring.io</url></organization><licenses><license><name>Apache License, Version 2.0</name><url>https://www.apache.org/licenses/LICENSE-2.0</url><comments>Copyright 2011 the original author or authors.Licensed under the Apache License, Version 2.0 (the \"License\");you may not use this file except in compliance with the License.You may obtain a copy of the License athttps://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an \"AS IS\" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express orimplied.See the License for the specific language governing permissions andlimitations under the License.</comments></license></licenses><parent><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-parent</artifactId><version>2.7.5</version><relativePath/><!-- lookup parent from repository --></parent><properties><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding><java.version>1.8</java.version></properties><dependencies><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-data-jpa</artifactId></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-web</artifactId></dependency><dependency><groupId>com.h2database</groupId><artifactId>h2</artifactId><scope>runtime</scope></dependency><dependency><groupId>org.springframework.boot</groupId><artifactId>spring-boot-starter-test</artifactId><scope>test</scope></dependency></dependencies><!-- 配置阿里云仓库 --><repositories><repository><id>aliyun-repos</id><url>https://maven.aliyun.com/repository/public</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></repository></repositories><pluginRepositories><pluginRepository><id>aliyun-repos</id><url>https://maven.aliyun.com/repository/public</url><releases><enabled>true</enabled></releases><snapshots><enabled>false</enabled></snapshots></pluginRepository></pluginRepositories><build><plugins><plugin><groupId>org.springframework.boot</groupId><artifactId>spring-boot-maven-plugin</artifactId></plugin></plugins></build></project>Tight Coupling 紧耦合在Spring框架以前，使用排序算法需要将算法实例化publicclassComplexBusinessService{SortAlgorithmsortAlgorithm=newBubbleSortAlgorithm;}publicclassBubbleSortAlgorithmimplementsSortAlgorithm{...}Good code has loose coupling.移除依赖项的实例化可以移除紧耦合publicclassComplexBusinessService{SortAlgorithm sortAlgorithm;// = new BubbleSortAlgorithm();publicComplexBusinessService(SortAlgorithm sortAlgorithm){// 创建构造函数this.sortAlgorithm = sortAlgorithm;}publicclassBubbleSortAlgorithmimplementsSortAlgorithm{...}Spring Framework instantiates objects and populates the dependencies.",
        "published": "2024-08-10",
        "updated": "2024-09-07 03:17:23"
    },
    {
        "author": "SIMULEITE",
        "title": "ICS5 PA",
        "url": "http://simuleite.github.io/ComputerScience/%E9%A1%B9%E7%9B%AE/ICS5%20PA/",
        "summary": "PA1-1 24.5.30又开始了ICS之旅，这次又给自己下了一个难度，找到了汪亮老师讲解的ICS 5！target第一课的目标是修正一个register错误声明insteresting中途网易源Bad Gateway 502了，更换清华源，学会了:%s/163/tuna/g非常爽！又学了几个终端快捷键想到了用ccache加速我的PAproblemsunion和struct的区别？unioin在同一个内存空间中存储不同的数据类型。struct则是同时存储不同的数据类型。为什么要用union？阅读i386手册2.3.1 General RegistersAsFigure 2-5shows, the low-order word of each of these eight registers has a separate name and can be treated as a unit. This feature is useful for handling 16-bit data items and for compatibility with the 8086 and 80286 processors. The word registers are named AX, BX, CX, DX, BP, SP, SI, and DI.对于CPU来说，可以把AH AX AL看成单独的单元，拆分成小块。所以它们是共用关系。PA1-2 ALU 24.6.5target实现ALU中的各类运算，包括设置标志位knowledgeAppendix CNameFunctionCFCarry Flag ── Set on high-order bit carry or borrow; cleared otherwise.PFParity Flag ── Set if low-order eight bits of result contain an even number of 1 bits; cleared otherwise.ZFZero Flag ── Set if result is zero; cleared otherwise.SFSign Flag ── Set equal to high-order bit of result (0 is positive, 1 if negative).OFOverflow Flag ── Set if result is too large a positive number or too small a negative number (excluding sign-bit) to fit in destination operand; cleared otherwise.",
        "published": "2024-05-29",
        "updated": "2024-08-21 09:20:40"
    },
    {
        "author": "SIMULEITE",
        "title": "Listary使用",
        "url": "http://simuleite.github.io/ComputerScience/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/Listary%E4%BD%BF%E7%94%A8/",
        "summary": "网络搜索网站URL备注</the",
        "published": "2024-08-15",
        "updated": "2024-08-16 12:08:33"
    },
    {
        "author": "SIMULEITE",
        "title": "Spring Boot",
        "url": "http://simuleite.github.io/ComputerScience/%E9%A1%B9%E7%9B%AE/Spring%20Boot/",
        "summary": "Spring CLI可以用Spring Init",
        "published": "2024-07-23",
        "updated": "2024-07-25 07:50:44"
    },
    {
        "author": "SIMULEITE",
        "title": "网络是怎样连接的",
        "url": "http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/%E7%BD%91%E7%BB%9C%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%9E%E6%8E%A5%E7%9A%84/",
        "summary": "Web浏览器网址就是请求服务器上对应的文件DNS从顶级域名开始根据网址查IP。DNS服务器通过缓存查过的IP来加快服务",
        "published": "2024-07-24",
        "updated": "2024-07-25 00:33:01"
    },
    {
        "author": "SIMULEITE",
        "title": "ThinkPHP 6",
        "url": "http://simuleite.github.io/ComputerScience/%E9%A1%B9%E7%9B%AE/ThinkPHP%206/",
        "summary": "ThinkPHP 6.0文档<a class=\"markdownIt-Anchor\" href",
        "published": "2024-07-18",
        "updated": "2024-07-23 07:29:59"
    },
    {
        "author": "SIMULEITE",
        "title": "Windows scripts使用",
        "url": "http://simuleite.github.io/ComputerScience/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/Windows%20scripts%E4%BD%BF%E7%94%A8/",
        "summary": "Task SchedulerWIN+R,taskschd.msc<br",
        "published": "2024-07-15",
        "updated": "2024-07-16 08:45:20"
    },
    {
        "author": "SIMULEITE",
        "title": "vscode使用",
        "url": "http://simuleite.github.io/ComputerScience/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/vscode%E4%BD%BF%E7%94%A8/",
        "summary": "全键盘操作指南",
        "published": "2024-05-01",
        "updated": "2024-07-06 02:36:50"
    },
    {
        "author": "残页",
        "title": "若人生是场大梦啊——记我人生的前19年",
        "url": "https://blog.canyie.top/2023/11/06/first-19-years-of-my-life/",
        "summary": "上次发年终总结还是 2022 年发 2021 年的，2022 年的年终总结缺失了。今年发生了好多好多的事情，一直想写今年的年终总结但是却总没到年终，干脆写成前 19 年纪念吧。",
        "published": "2023-11-06",
        "updated": "2024-07-03 23:19:21"
    },
    {
        "author": "SIMULEITE",
        "title": "Computer Organization&Design学习记录",
        "url": "http://simuleite.github.io/ComputerScience/%E7%AC%94%E8%AE%B0/Computer%20Organization&Design%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/",
        "summary": "Chapter2 指令：计算机的语言本章将介绍MIPS汇编语言指令。三条设计原则简单源于规整 Simplicity favors regularity.越小越快 Smaller is faster.优秀的设计需要适宜的折中方案 Good design demands good compromises.2.2 硬件的操作与操作数规整add a, b, c // a = b + cMIPS汇编语言使用这样的固定记法。每条MIPS算术指令只执行1个操作，仅有3个变量。操作数必须来自寄存器变量f、g、h、i、j依次分配给$s0~$s4，编译下面的C语句f = (g + h) - (i + j);---add $t0, $s1, $s2// t0 = s1 + s2add $t1, $s3, $s4sub $s0, $t0, $t1// s0 = t0 + t1数据传输只有少量数据存在寄存器中，因此需要在存储器和寄存器间传输数据A的基址是存在$s3，编译下面的C语句A[12] = h + A[8]---lw  $t0,32($s3)// 先读数，再相加；32为偏移量，8*4byteadd $t0, $s2, $t0sw  $t0,48($s3)// 存数立即数addi $t0, $t1,4// t0 = t1 + 4；无需读取4，作为立即数相加subi $t0, $t1,4",
        "published": "2024-06-07",
        "updated": "2024-07-03 04:38:44"
    },
    {
        "author": "SIMULEITE",
        "title": "Huorong使用",
        "url": "http://simuleite.github.io/ComputerScience/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/Huorong%E4%BD%BF%E7%94%A8/",
        "summary": "保护文件防护中心 - 高级防护 - 自定义防护 - 锁定文件读取、创建、修改、删除权限",
        "published": "2024-06-17",
        "updated": "2024-06-30 09:16:13"
    },
    {
        "author": "SIMULEITE",
        "title": "Mermaid使用",
        "url": "http://simuleite.github.io/ComputerScience/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/Mermaid%E4%BD%BF%E7%94%A8/",
        "summary": "Flowchart<a class=\"markdownIt-Anchor\" href=\"#基本语法",
        "published": "2024-06-28",
        "updated": "2024-06-29 12:56:55"
    },
    {
        "author": "SIMULEITE",
        "title": "微信小程序 MiniApp",
        "url": "http://simuleite.github.io/ComputerScience/%E9%A1%B9%E7%9B%AE/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%20MiniApp/",
        "summary": "说明：%%是注释%%程序设计首先写<view class=\"class_name\"></view>来结构化设计；每个class对应一个css样式<viewclass=\"container\"><imageclass=\"avatar\"src=\"../images/avatar/avatar-1.jpg\"></image><textclass=\"motto\">Welcome, Orange Can</text><viewclass=\"journey-container\"><textclass=\"journey\">Start your journey of miniprogram</text></view></view>css中放样式信息，写法如下；全局样式可以放app.css/* 示范写法 */.class_name{attribute: rpx;location_attribute: center;}/* 一般网页可以这样布局 */.container{/* 最外层的<view> */display: flex;/* 布局方式 */flex-direction: column;/* 列，从上到下；reverse是从下到上；可选row */align-items: center;/* 居中 */}",
        "published": "2024-03-29",
        "updated": "2024-06-08 04:37:42"
    },
    {
        "author": "SIMULEITE",
        "title": "Regular Expression 正则表达式",
        "url": "http://simuleite.github.io/ComputerScience/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/Regular%20Expression%20%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/",
        "summary": "基本知识特殊字符</h2",
        "published": "2024-05-13",
        "updated": "2024-05-14 11:12:12"
    },
    {
        "author": "SIMULEITE",
        "title": "PHP ADTP后台管理",
        "url": "http://simuleite.github.io/ComputerScience/%E9%A1%B9%E7%9B%AE/PHP%20ADTP%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86/",
        "summary": "信息系统架构信息化系统：前台 + 后台 + 数据库B/S 模式前端 -> Server[Apache->PHP(TP6.0)] -> SQL DataBase运行逻辑：Client发送require请求(http协议)，包含header（length、refer信息）、body（数据）Apache接受请求，给PHP做处理PHP读取、处理数据；判断数据是否损毁、是否需要退回数据更新到前端，并返回结果(success/fail)",
        "published": "2024-04-14",
        "updated": "2024-04-15 09:34:06"
    },
    {
        "author": "NgaiYeanCoi",
        "title": "hexo的一些命令",
        "url": "https://blog.nyc1.xyz/2024/03/17/hexo/",
        "summary": "常用命令创建和发布文章123hexo new “postName” 新建文章hexo new page “pageName” 新建页面一键部署命令1hexo clean && hexo g && hexo dhexo clean == hexo c清除缓存 网页正常情况下可以忽略此条命令hexo generate == hexo g生效新增、修改、更新的文件hexo deploy == hexo dhexo的一键部署功能，执行此命令即可将网站发布到配置中的仓库地址，执行此命令前需要配置站点配置文件_config.yml",
        "published": "2024-03-17",
        "updated": "2024-03-27 15:44:01"
    },
    {
        "author": "NgaiYeanCoi",
        "title": "docker如何改变环境变量",
        "url": "https://blog.nyc1.xyz/2024/03/17/docker%E7%9A%84%E4%B8%80%E4%BA%9B%E5%91%BD%E4%BB%A4/",
        "summary": "<a href=\"#命令-步骤\"",
        "published": "2024-03-17",
        "updated": "2024-03-27 15:44:00"
    },
    {
        "author": "残页",
        "title": "在故事开始之前的故事：Android 启动过程与 magiskinit 分析",
        "url": "https://blog.canyie.top/2023/11/12/android-booting-shenanigans-and-magiskinit-analysing/",
        "summary": "终于开了一直想写的这篇文章，再不写点东西就真的是年更博客了……本文可以认为是Android Booting Shenanigans的中文补充说明，同时添加了 magiskinit 的一些处理细节。即使你对 magiskinit 没兴趣也可以看看，说不定就有一些你平时从来没注意到的细节呢 :)",
        "published": "2023-11-12",
        "updated": "2024-02-25 16:05:43"
    },
    {
        "author": "残页",
        "title": "写给 Android 开发者的系统基础知识科普",
        "url": "https://blog.canyie.top/2023/03/28/system-foundation-for-android-devs/",
        "summary": "与我以往的风格不同，本文为科普类文章，因此不会涉及到太过高深难懂的知识。但这些内容可能 Android 应用层开发者甚至部分 framework 层开发者都不了解，因此仍旧高能预警。另外广东这两天好冷啊，大家注意保暖~",
        "published": "2023-03-28",
        "updated": "2023-03-29 03:16:42"
    },
    {
        "author": "残页",
        "title": "Android Property 实现解析与黑魔法",
        "url": "https://blog.canyie.top/2022/04/09/property-implementation-and-isolation/",
        "summary": "Android Property （属性系统）可谓是 Android 中使用最广泛的进程间信息共享机制了，如 app 获取系统版本号，就是通过属性系统传递的信息；对于如此常用的底层机制，你可能知道getpropSystemProperties__system_property_get这些 API，但是，你真的了解它吗？这次，我们不但要会遵守规则用这些 API，我们还要成为规则的缔造者，让系统为我们服务！Let’s go！",
        "published": "2022-04-09",
        "updated": "2022-04-09 09:56:45"
    },
    {
        "author": "残页",
        "title": "从电子厂逃离的 17 岁 - 2021 年终总结",
        "url": "https://blog.canyie.top/2022/01/09/end-of-2021/",
        "summary": "当我写下这段文字时，时间是 2022 年 1 月 9 日，这个时候发上一年年终总结似乎晚了点；老实说，在这个博客刚创建的时候，我没有打算写这种记录性的内容，我的目标一直都是像Weishu’s Notes的高质量内容；但是昨晚看 weishu 直播写代码，他说了一句让我很触动的话：“人生不需要有意义，有意思就够了。”我的 2021 可能没什么意义，但如果我不做点什么纪念一下，它很有可能就消逝在时间的长河里，连我自己都回忆不起来，更别提有意思了。",
        "published": "2022-01-09",
        "updated": "2022-01-09 08:37:07"
    },
    {
        "author": "残页",
        "title": "检测Magisk与Xposed",
        "url": "https://blog.canyie.top/2021/05/01/anti-magisk-xposed/",
        "summary": "不久前，开发者Rikka & vvb2060上架了一款环境检测应用Momo，把大家一直以来信任的各种反检测手段击得粉碎。下面我会通过部分已公开的源码，分析这个可能是史上最强的环境检测应用。",
        "published": "2021-05-01",
        "updated": "2021-05-01 10:13:00"
    },
    {
        "author": "残页",
        "title": "Android R上的隐藏API限制学习笔记",
        "url": "https://blog.canyie.top/2020/06/10/hiddenapi-restriction-policy-on-android-r/",
        "summary": "2018年发布的Android 9中引入了对隐藏API的限制，这对整个Android生态来说当然是一件好事，但也严重限制了以往我们通过反射等手段实现的“黑科技”（如插件化等），所以开发者们纷纷寻找手段绕过这个限制，比如我曾经提出了两个绕过方法，其中一个便是几乎完美的双重反射（即“元反射”，现在来看叫“套娃反射”比较好）；而在即将发布的Android R中把这个方法封杀了（谷歌：禁止套娃！），因此我重新研究了Android R中的限制策略。",
        "published": "2020-06-10",
        "updated": "2021-04-10 05:39:39"
    },
    {
        "author": "残页",
        "title": "通过系统的native bridge实现注入zygote",
        "url": "https://blog.canyie.top/2020/08/18/nbinjection/",
        "summary": "之前研究art的时候发现了native bridge，简单来说这东西是主要作用就是为了能运行不同指令集的so（比如x86的设备运行arm的app），而arm设备上这个东西一般都是关闭的，研究了一下后发现这东西挺适合动手脚的，刚好自己在用的Riru被针对了，所以有了这篇博客。把对应的示例代码传到了github：NbInjection，接下来我们聊一下这个小玩具。",
        "published": "2020-08-18",
        "updated": "2020-10-25 02:53:44"
    },
    {
        "author": "残页",
        "title": "ART上的动态Java方法hook框架",
        "url": "https://blog.canyie.top/2020/04/27/dynamic-hooking-framework-on-art/",
        "summary": "大家应该还记得我上次介绍的Dreamland吧，忘记了也没事，简单介绍一下：这是一个类似Xposed的框架，可以注入应用进程并进行方法hook。进程注入上次已经说过了，另一个重点hook当时是使用了SandHook框架，这是一款非常优秀的hook框架，但是有点问题，不太适合Dreamland；在比较了其他hook框架之后，发现似乎都存在一些问题，最终决定自己动手写一个。已经开源，代码在这：Pine，接下来我会介绍它的具体实现。",
        "published": "2020-04-27",
        "updated": "2020-10-25 02:50:19"
    },
    {
        "author": "残页",
        "title": "《空中浩劫》里的法航447",
        "url": "https://blog.canyie.top/2020/08/20/af447-in-aci/",
        "summary": "2009年6月1日（UTC时间），法国航空447号班机（机型空中客车A330-203、注册号F-GZCP）在大西洋中部雷达盲区神秘失踪，后被证实坠毁，机上228人（乘客216人、机组成员12人）全数罹难。著名空难文献剧《Air Crash Investigation》（中文一般译为《空中浩劫》，以下简称ACI）在S12E13中收录了此事故，揭露了所谓的“空难真相”，将矛头直指副驾驶皮埃尔-塞德里克·博南（Pierre Cédric Bonin）；同时，由于该片的知名度，让许多航空爱好者乃至真正的航空从业者认为该片所述即为事实。然而，真的是这样吗？",
        "published": "2020-08-20",
        "updated": "2020-08-20 08:29:39"
    },
    {
        "author": "残页",
        "title": "一种在ART上快速加载dex的方法",
        "url": "https://blog.canyie.top/2020/02/15/fast-load-dex-on-art-runtime/",
        "summary": "在国内的大环境下，Android上插件化/热修复等技术百花齐放，而这一切都基于代码的动态加载。Android提供了一个DexClassLoader。用这个API能成功加载dex，但有一个比较严重的问题：Android Q以下，当这个dex被加载时，如果没有已经生成的oat，则会执行一次dex2oat把这个dex编译为oat，导致第一次加载dex会非常非常慢。个人认为这样的设计是非常不合理的，虽然转换成oat之后执行会很快，但完全可以让用户以解释器模式先愉快的用着，dex2oat放另一个线程执行多好。Android 8.0上谷歌还提供了一个InMemoryDexClassLoader，而以前的Android版本，就要开发者自己想办法了……",
        "published": "2020-02-15",
        "updated": "2020-04-15 03:08:44"
    },
    {
        "author": "残页",
        "title": "我也有自己的个人博客啦！",
        "url": "https://blog.canyie.top/2019/10/28/hello-world/",
        "summary": "我也有自己的个人博客啦！",
        "published": "2019-10-28",
        "updated": "2020-04-15 03:05:17"
    },
    {
        "author": "残页",
        "title": "试着写了一个类Xposed框架",
        "url": "https://blog.canyie.top/2020/02/03/a-new-xposed-style-framework/",
        "summary": "新人第一次写博客，勿喷..本文也发布在知乎上Xposed框架在Android上是神器般的存在，它给了普通用户随意定制系统的能力，各种骚操作层出不穷。随着咱对Android的了解越来越深（其实一点都不深..），逐渐冒出了自己写一个类Xposed框架的想法，最终搞出了这个勉强能用的半成品。代码在这：Dreamland&Dreamland Manager，代码写的很辣鸡，求轻喷QAQ接下来会介绍一下实现细节与遇到的问题。",
        "published": "2020-02-03",
        "updated": "2020-02-05 06:10:23"
    }
]